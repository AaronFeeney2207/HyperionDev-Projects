# Develop a personalised ChatBot for freshmen at a university
# designed to make the transition to university a bit smoother.
# Design pre programmmed questions for your ChatBot to answer and give 
# detailed personalised answers back and decide what answer needs to be
# given in order to indetify which personalised response the program outputs back.
# Ensure to keep the conversation playful and enable the user to have continuous engagement with the bot
# Add functionality to your program that will ofeer users personalised suggestions, based on information
# they've provided and questions they've asked.

# tips :
# to avoid cluttered code, store the predetermined questions in variables at the beginning of your program 
# Decision Trees are a very helpful tool to plan out your code

###############################

# Collect personal info for new students such as their name, favourite colour and age 
# personalised suggestions based on inputted info 
# use conditional loops to check for pre-programmed questions 
# use while loops to allow the Bot to continuously engage with the user until they have 
# satisfied an exit condition.

###############################

question_consent = input('''Hello there! My name is UniBuddy and I'm here to make your opening year of university as smooth as possible ;)
I'm just going to have to ask a few questions so I can get to know you better! Is that okay? Yes/No:  ''')
question_consent = question_consent.lower()                                            # Means capitalisation in the user input will not be  aproblem for the program 

while question_consent == 'yes':
    name = input("What's your name? ")
    name = name.capitalize()                                                          # Capitalising user inouts will be seen multiple times so it allows my program to respond with proper grammar
    print(f"Hi {name}! Great to meet you.\n")

    age = (input("How old are you?  "))
    age = int(age)

    while age <= 13 :                                                                 # a while loop for if user puts an unreasonable response the program will run it back to find out actual age 
        print("Yeah and I'm human, see, we can all tell lies ;) ")
        age = int(input("So, how old are you actually? "))

    if age < 18 :
         print("It's uncommon to start Univeristy this young, you must be quite the talent!\n")
    elif age >= 18 and age <= 24:
         print("I've found that this age is within the most common age bracket for freshmen at university, you'll fit right in!\n")
    else:
         print("You're older than our usual age range. Better later than never! Growth is not determined by age, I'm sure you'll have a blast at University!\n")
        

    
    faculty = input(f"What faculty do you belong to {name}? ")
    faculty = faculty.capitalize()
    print(f"The {faculty} faculty is an intriguing one, a lot to discover and learn, how exciting!\n ")

    majors = input("What are you majoring in? ")
    print(f"I see someone likes a challenge! A {majors} degree is no easy fish to fry but you have the potential, good luck!\n" )

    fav_colour = input("May I also ask what is your favourite colour?  ")
    fav_colour = fav_colour.strip(" ")                                                                                           # To ensure capitalisation and spacing isn't a problem when inputting favourite colour 
    fav_colour = fav_colour.lower()                                                                                                        

    if fav_colour == "blue":
        if age >= 18 and age <= 24:
            print("I'm sensing you'd be a great match for our football team! Their home jersey is blue!\n")
        else:
            print("That's a great colour!\n")
    elif fav_colour == "red":
        if age >= 18 and age <= 24:
            print("You'd like the attire of our hockey team! Check em out.\n") 
        else:
            print("Our library has red walls, may be a nice aesthetic for you to sit down and study.\n ")
    elif fav_colour == "green":
        print("You should look into the debate team, there green jumpers seem to be quite stylish amonst the youth.\n")
    else:
        print("That's a really nice colour! In fact, it's one of my fvaourites :)\n")

    print(f'''It's been great getting to know you {name}! I can feel the enthusiasm through my CPU :) \nThe {faculty} faculty won't know what's hit em. \nIf there's anything else you would like to ask regarding tutors, clubs, curriculum or anything else, you can ask me and I will do my best to answer! 
When you're done you can type "bye" ''')
    
     #### Follow up questions, user may ask and storing into list 
     
    follow_up_questions = [
    "where can i find my curriculum",                          
    "where can i find a list for all clubs",
    "how do i find out who my tutor is",
    "am i taking the right course"]

    answers = [
    "This should be emailed to you but if not, go to the curriculum advisors room on block B of the campus in room 12. ",
    "Speak to the Head of Department for extra curricular activities who is located on block D of campus in room 101. ",
    "They should reach out to you via email in due time but if not, go to reception on the south side of campus and they will be able to tell you.",
    "That's a tough one that I get asked a lot and only you can answer that. You are always able to transfer courses before the end of the first semester so you still have time to answer that question!"]

    finish = False
 # We can now proceed to ask user if they have additional questions now that necessaries values have been stored
    
    while not finish:
        add_question = input("\nDo you want to ask me anything? :)\n")       # add_question meaning additional question 

        add_question = add_question.strip("?")                               # Gets rid of any punctuation that could derail the program 
        add_question = add_question.strip(" ")
        add_question = add_question.lower()                                  # Means capitalisation from the user will not be a problem.

        if add_question in follow_up_questions:                              # Seeing if the asked question is in our list of questions 
            asked_question = follow_up_questions.index(add_question)         # if it's in out list we find out which question it is 
            print(answers[asked_question])                                   # We then print the appropriate answer based on matching the indexes of the follow up questions and the matched answers
        elif add_question == "bye":
            finish = True 
            print(f"It's been great getting to know you {name}, you seem like a great person and will smash university! Come back if you ever need anything else. Good bye :) ")
        else:
            print("I wont be able to answer that i'm afraid, that input was either invalid or the answer is above my paygrade :( ")
    break                                                                    # The indentation of this 'break' plays a role of stopping this loop from carrying on running even after th euser enters 'bye'
if question_consent == "no":
    print("Looks like I'm not needed, I wish you an amazing University journey and come back anytime if you need me! ")

    
    


    
     
